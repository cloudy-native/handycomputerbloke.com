{"version":3,"file":"component---src-pages-index-tsx-df796dfa003bc26bcf76.js","mappings":"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","sources":["webpack://handycomputerbloke/./src/components/info-card.tsx","webpack://handycomputerbloke/./src/components/matrix.tsx","webpack://handycomputerbloke/./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","webpack://handycomputerbloke/./node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js","webpack://handycomputerbloke/./node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js","webpack://handycomputerbloke/./src/pages/index.tsx"],"sourcesContent":["import { Box, useColorModeValue } from '@chakra-ui/react'\nimport React from 'react'\n\nexport default function InfoCard({\n  lightBackground = 'blue.100',\n  darkBackground = 'blue.700',\n  children,\n}) {\n  return (\n    <Box\n      background={useColorModeValue(lightBackground, darkBackground)}\n      w=\"100%\"\n      p={4}\n      boxShadow=\"lg\"\n      borderRadius=\"xl\"\n      borderWidth={'1px'}\n    >\n      {children}\n    </Box>\n  )\n}\n","import { SimpleGrid } from '@chakra-ui/react'\nimport React from 'react'\n\nexport default function Matrix({ columns = { sm: 1, md: 2 }, children }) {\n  return (\n    <SimpleGrid columns={columns} spacing={4}>\n      {children}\n    </SimpleGrid>\n  )\n}\n","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\n\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\n\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };","import { useImage } from '@chakra-ui/image';\nimport { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { cx, __DEV__, filterUndefined } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$1 = [\"name\", \"getInitials\"],\n    _excluded2 = [\"src\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\"];\n/**\n * AvatarBadge used to show extra badge to the top-right\n * or bottom-right corner of an avatar.\n */\n\nvar AvatarBadge = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n\n  var badgeStyles = _extends({\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    insetEnd: \"0\",\n    bottom: \"0\"\n  }, styles.badge);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-avatar__badge\", props.className),\n    __css: badgeStyles\n  }));\n});\n\nif (__DEV__) {\n  AvatarBadge.displayName = \"AvatarBadge\";\n}\n\nfunction initials(name) {\n  var _name$split = name.split(\" \"),\n      firstName = _name$split[0],\n      lastName = _name$split[1];\n\n  return firstName && lastName ? \"\" + firstName.charAt(0) + lastName.charAt(0) : firstName.charAt(0);\n}\n/**\n * The avatar name container\n */\n\n\nvar AvatarName = function AvatarName(props) {\n  var name = props.name,\n      getInitials = props.getInitials,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    role: \"img\",\n    \"aria-label\": name\n  }, rest, {\n    __css: styles.label\n  }), name ? getInitials == null ? void 0 : getInitials(name) : null);\n};\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\n\n\nvar DefaultIcon = function DefaultIcon(props) {\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n  }));\n};\n\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\n\nvar Avatar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      src = _omitThemingProps.src,\n      name = _omitThemingProps.name,\n      showBorder = _omitThemingProps.showBorder,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      onError = _omitThemingProps.onError,\n      _omitThemingProps$get = _omitThemingProps.getInitials,\n      getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n      _omitThemingProps$ico = _omitThemingProps.icon,\n      icon = _omitThemingProps$ico === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _omitThemingProps$ico,\n      _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n      iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n      loading = _omitThemingProps.loading,\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      ignoreFallback = _omitThemingProps.ignoreFallback,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var avatarStyles = _extends({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined\n  }, baseStyle, styles.container);\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-avatar\", props.className),\n    __css: avatarStyles\n  }), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(AvatarImage, {\n    src: src,\n    loading: loading,\n    onError: onError,\n    getInitials: getInitials,\n    name: name,\n    borderRadius: borderRadius,\n    icon: icon,\n    iconLabel: iconLabel,\n    ignoreFallback: ignoreFallback\n  }), children));\n});\n\nif (__DEV__) {\n  Avatar.displayName = \"Avatar\";\n}\n\nvar AvatarImage = function AvatarImage(props) {\n  var src = props.src,\n      onError = props.onError,\n      getInitials = props.getInitials,\n      name = props.name,\n      borderRadius = props.borderRadius,\n      loading = props.loading,\n      iconLabel = props.iconLabel,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _props$icon,\n      ignoreFallback = props.ignoreFallback;\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n\n  var status = useImage({\n    src: src,\n    onError: onError,\n    ignoreFallback: ignoreFallback\n  });\n  var hasLoaded = status === \"loaded\";\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n\n  var showFallback = !src || !hasLoaded;\n\n  if (showFallback) {\n    return name ? /*#__PURE__*/React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials: getInitials,\n      name: name\n    }) : /*#__PURE__*/React.cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n\n\n  return /*#__PURE__*/React.createElement(chakra.img, {\n    src: src,\n    alt: name,\n    className: \"chakra-avatar__img\",\n    loading: loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: borderRadius\n    }\n  });\n};\n\nif (__DEV__) {\n  AvatarImage.displayName = \"AvatarImage\";\n}\n\nvar _excluded = [\"children\", \"borderColor\", \"max\", \"spacing\", \"borderRadius\"];\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\n\nvar AvatarGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      max = _omitThemingProps.max,\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"-0.75rem\" : _omitThemingProps$spa,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var validChildren = getValidChildren(children);\n  /**\n   * get the avatars within the max\n   */\n\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  /**\n   * get the remaining avatar count\n   */\n\n  var excess = max != null && validChildren.length - max;\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n\n  var reversedChildren = childrenWithinMax.reverse();\n  var clones = reversedChildren.map(function (child, index) {\n    var _child$props$borderCo;\n\n    var isFirstAvatar = index === 0;\n    var childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_child$props$borderCo = child.props.borderColor) != null ? _child$props$borderCo : borderColor,\n      showBorder: true\n    };\n    return /*#__PURE__*/React.cloneElement(child, filterUndefined(childProps));\n  });\n  var groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n\n  var excessStyles = _extends({\n    borderRadius: borderRadius,\n    marginStart: spacing\n  }, baseStyle, styles.excessLabel);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles\n  }, rest, {\n    className: cx(\"chakra-avatar__group\", props.className)\n  }), excess > 0 && /*#__PURE__*/React.createElement(chakra.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, \"+\" + excess), clones);\n});\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n\nexport { Avatar, AvatarBadge, AvatarGroup, baseStyle };","import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      mediaQueryList[index].addEventListener(\"change\", listener);\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n      });\n    };\n  }, []);\n  return matches;\n}\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\n\n\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n/**\n * React hook used to get the user's animation preference.\n */\n\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var breakpoint = _ref[0],\n        minWidth = _ref[1]; // given a following breakpoint\n\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\n * Create a media query string from the breakpoints,\n * using a combination of `min-width` and `max-width`.\n */\n\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n\n  if (!maxWidth) {\n    return query;\n  }\n\n  if (query) {\n    query += \" and \";\n  }\n\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\n\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\n\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\n *\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\n */\n\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\n * Convert media query value to string\n */\n\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}\n\nvar _excluded = [\"query\"],\n    _excluded2 = [\"query\"],\n    _excluded3 = [\"query\"];\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var env = useEnvironment();\n  var mediaQueries = React__default.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (env.window.matchMedia) {\n      var maxBreakpoint;\n      mediaQueries.forEach(function (_ref) {\n        var query = _ref.query,\n            breakpoint = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n        var mediaQuery = env.window.matchMedia(query);\n\n        if (mediaQuery.matches) {\n          maxBreakpoint = breakpoint;\n        }\n      });\n\n      if (maxBreakpoint) {\n        return maxBreakpoint;\n      }\n    }\n\n    if (!defaultBreakpoint) {\n      return undefined;\n    }\n\n    var mediaQuery = mediaQueries.find(function (_ref2) {\n      var breakpoint = _ref2.breakpoint;\n      return breakpoint === defaultBreakpoint;\n    });\n\n    if (mediaQuery) {\n      mediaQuery.query;\n\n      var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded2);\n\n      return breakpoint;\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React__default.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React__default.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref3) {\n      var query = _ref3.query,\n          breakpoint = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref4) {\n        var mediaQuery = _ref4.mediaQuery,\n            handleChange = _ref4.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the non-number breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","import { CheckIcon } from '@chakra-ui/icons'\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  HStack,\n  SimpleGrid,\n  Stack,\n  Text,\n  useBreakpointValue,\n  VStack,\n  Wrap,\n  WrapItem,\n} from '@chakra-ui/react'\nimport React, { ReactElement } from 'react'\nimport InfoCard from '../components/info-card'\nimport Matrix from '../components/matrix'\n\ninterface ServiceCardProps {\n  heading: string\n  blurb: string[]\n}\n\ninterface QuestionCardProps {\n  question: string\n  answers: string[]\n}\n\ninterface SolutionCardProps {\n  topic: string\n  solutions: string[]\n}\n\ninterface SplashCardProps {\n  splash: string[]\n}\n\ninterface TestimonialCardProps {\n  title: string\n  quote: string\n  company: string\n  avatar: string\n}\n\nconst services: ServiceCardProps[] = [\n  {\n    heading: 'Technical Due Diligence',\n    blurb: [\n      \"You're the Due Diligence Team looking at a target software company.\",\n      \"You need help with the technical part and that's where we come in. We conduct a thorough, nowhere-to-hide technical evaluation.\",\n      'Our reports are always as candid as they are actionable.',\n    ],\n  },\n  {\n    heading: 'Architecture Deep Dive',\n    blurb: [\n      'This is conducting Due Diligence on yourself.',\n      \"Often, this comes about because you made or inherited a monolith and it's time to fix it.\",\n      \"We're honest. If your architecture is broken, we'll let you know. We'll be nice about it. But trust us.\",\n      \"We'll tell you how to fix it. And help if you want.\",\n    ],\n  },\n  {\n    heading: 'Technical Debt Remediation',\n    blurb: [\n      \"As seasoned, hands-on veterans of the software industry we know what makes things work. And of course what doesn't.\",\n      \"We've taken components a company deems too risky to touch and reworked them to be less scary.\",\n      'We never boil the ocean when we refactor legacy code. Instead, we spend the time it takes up front to plan incrementally testable, deployable evolutions.',\n    ],\n  },\n  {\n    heading: 'Cloud Adoption',\n    blurb: [\n      \"You may be just starting your migration to the cloud. Or you may be in the process and you think it could be going better. Perhaps you did a forklift from your data center and are wonder what's up with your bill.\",\n      \"Wherever you are in your cloud journey, we've got you covered.\",\n    ],\n  },\n]\n\nconst questions: QuestionCardProps[] = [\n  {\n    question: \"Where's your architecture diagram?\",\n    answers: [\n      'Let me send you the PowerPoint.',\n      \"Here it is, but it's very out of date.\",\n    ],\n  },\n  {\n    question: 'Can I see a Pull Request?',\n    answers: [\n      \"We don't use PRs.\",\n      `No you can't.`,\n      'We use PRs but merging is not gated on reviews.',\n    ],\n  },\n  {\n    question: 'How do you plan sprints?',\n    answers: [\n      \"Not sure who has it right now, but there's a spreadsheet.\",\n      'We invented our own version of Agile and have one long sprint really.',\n    ],\n  },\n  {\n    question: \"What's your unit test coverage?\",\n    answers: [\n      'We keep a good list of manual tests and use that.',\n      'We can write code faster without them.',\n      `We don't know`,\n    ],\n  },\n  {\n    question: \"What's your CI and CD?\",\n    answers: [\"What's that?\", 'Neal. Neal does the builds.'],\n  },\n  {\n    question: 'Why is your AWS bill breakdown different to the architecture?',\n    answers: [\"We don't know.\"],\n  },\n]\n\nconst solutions: SolutionCardProps[] = [\n  {\n    topic: 'Cloud Migration',\n    solutions: [\n      \"It's OK to start with forklift because it's low risk and you mostly have the skills already.\",\n      \"Think about cloud-native as a fast follow. But please think about it. That's our specialty.\",\n      'Pick the same cloud provider everyone else uses.',\n    ],\n  },\n  {\n    topic: 'Cloud Native',\n    solutions: [\n      \"Don't hesitate. Running your forklift migration in the cloud is not cloud native. Using managed services is.\",\n      'Start with the lowest-friction components. Like anything running on a provisioned VM after the forklift that has a managed service equivalent.',\n      \"Either migrate something to a managed service, or optimize something that's already native. But please not both at the same time.\",\n    ],\n  },\n  {\n    topic: 'Production Readiness',\n    solutions: [\n      'Make all metrics observable independently.',\n      'Observe them.',\n      'Define and follow a mandatory \"Definition of Done.\"',\n      'Eliminate manual production access by default.',\n      'Use Infrastructure-as-Code (IaC) and deploy automatically.',\n    ],\n  },\n]\n\nconst splashCards: SplashCardProps[] = [\n  {\n    splash: ['Technical evaluation', 'Tailored for you', 'Nowhere to hide'],\n  },\n  {\n    splash: [`Proven expertise`, 'Politely candid', 'Always actionable'],\n  },\n]\n\nconst testimonials: TestimonialCardProps[] = [\n  {\n    title: 'How on Earth...',\n    quote: '... did they get all that in two days of due diligence?',\n    company: 'CTO, Target Company',\n    avatar: 'https://www.w3schools.com/howto/img_avatar.png',\n  },\n  {\n    title: 'We completed the deal',\n    quote:\n      'But with our eyes open [based on the] risks surfaced during the thorough technical due diligence.',\n    company: 'Partner, Private Equity',\n    avatar: 'https://www.w3schools.com/howto/img_avatar2.png',\n  },\n  {\n    title: 'The best explainers we know',\n    quote:\n      'It was a pleasure watch the team explain technical concerns so we understood the implications.',\n    company: 'Associate, Venture Capital',\n    avatar: 'https://www.w3schools.com/w3images/avatar6.png',\n  },\n  {\n    title: 'We did not have to boil the ocean',\n    quote:\n      'We were able to start migrating to the cloud component by component. We engaged [Handy Computer Bloke] from the start and came out the other side experts!',\n    company: 'Architect, Public Cloud Late Bloomer',\n    avatar: 'https://www.w3schools.com/w3images/avatar2.png',\n  },\n]\n\nfunction ServiceCard(props: ServiceCardProps) {\n  return (\n    <InfoCard>\n      <VStack spacing={2} align=\"stretch\">\n        <Heading size=\"md\">{props.heading}</Heading>\n        <Divider />\n        {props.blurb.map((t, index) => (\n          <Text key={index}>{t}</Text>\n        ))}\n      </VStack>\n    </InfoCard>\n  )\n}\n\nfunction QuestionCard(questionCardProps: QuestionCardProps) {\n  const { question, answers } = questionCardProps\n\n  return (\n    <InfoCard>\n      <VStack spacing={2} align=\"stretch\">\n        <Grid templateColumns=\"repeat(12, 1fr)\">\n          <GridItem>Q:</GridItem>\n          <GridItem colSpan={11}>\n            <Text fontWeight=\"1000\">{question}</Text>\n          </GridItem>\n        </Grid>\n        <Divider />\n        {answers.map((answer, index) => (\n          <Grid key={index} templateColumns=\"repeat(12, 1fr)\">\n            <GridItem>A:</GridItem>\n            <GridItem colSpan={11}>{answer}</GridItem>\n          </Grid>\n        ))}\n      </VStack>\n    </InfoCard>\n  )\n}\n\nfunction SolutionCard(solutionCardProps: SolutionCardProps) {\n  return (\n    <InfoCard>\n      <VStack spacing={4} align=\"stretch\">\n        <Heading size=\"md\">{solutionCardProps.topic}</Heading>\n        {solutionCardProps.solutions.map((t, index) => (\n          <Grid key={index} templateColumns=\"repeat(12, 1fr)\">\n            <GridItem>\n              <CheckIcon color=\"green.500\" />\n            </GridItem>\n            <GridItem colSpan={11}>\n              <Text>{t}</Text>\n            </GridItem>\n          </Grid>\n        ))}\n      </VStack>\n    </InfoCard>\n  )\n}\n\nfunction ServicesGrid() {\n  return (\n    <Matrix>\n      {services.map((cardInfo, index) => (\n        <ServiceCard key={index} {...cardInfo} />\n      ))}\n    </Matrix>\n  )\n}\n\nfunction QuestionGrid() {\n  return (\n    <Matrix>\n      {questions.map((cardInfo, index) => (\n        <QuestionCard key={index} {...cardInfo} />\n      ))}\n    </Matrix>\n  )\n}\n\nfunction SolutionGrid() {\n  return (\n    <Matrix>\n      {solutions.map((cardInfo, index) => (\n        <SolutionCard key={index} {...cardInfo} />\n      ))}\n    </Matrix>\n  )\n}\n\nconst TestimonialAvatar = ({ props }: { props: TestimonialCardProps }) => {\n  return (\n    <HStack>\n      <Wrap>\n        <WrapItem>\n          <Avatar src={props.avatar} />\n        </WrapItem>\n      </Wrap>\n      <Text fontSize={'lg'}>{props.company}</Text>\n    </HStack>\n  )\n}\n\nfunction TestimonialCard(testimonialCardProps: TestimonialCardProps) {\n  return (\n    <InfoCard>\n      <VStack spacing={4} align=\"stretch\">\n        <TestimonialAvatar props={testimonialCardProps} />\n        <Divider />\n        <Heading size=\"md\">{testimonialCardProps.title}</Heading>\n        <Text>{testimonialCardProps.quote}</Text>\n      </VStack>\n    </InfoCard>\n  )\n}\n\nfunction TestimonialsGrid() {\n  return (\n    <Matrix>\n      {testimonials.map((cardInfo, index) => (\n        <TestimonialCard key={index} {...cardInfo} />\n      ))}\n    </Matrix>\n  )\n}\n\nfunction SplashCard(props: SplashCardProps) {\n  return (\n    <VStack w=\"100%\" align={'stretch'}>\n      {props.splash.map((t, index) => (\n        <Text key={index} color={'white'} fontWeight={'bold'} fontSize={'6xl'}>\n          {t}\n        </Text>\n      ))}\n    </VStack>\n  )\n}\n\nfunction Splash() {\n  return (\n    <>\n      <Flex\n        h={'100vh'}\n        backgroundImage={\n          'url(https://images.unsplash.com/photo-1588665306984-d5c6f62224aa?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2238&q=80)'\n        }\n        backgroundSize={'cover'}\n      >\n        <VStack\n          w={'full'}\n          align={'flex-start'}\n          px={useBreakpointValue({ base: 10 })}\n          py={useBreakpointValue({ base: 20 })}\n          bgGradient={'linear(to-r, blackAlpha.800, blackAlpha.100)'}\n        >\n          <SimpleGrid columns={{ base: 1 }} spacing={'36'}>\n            {splashCards.map((splash, index) => (\n              <SplashCard key={index} {...splash} />\n            ))}\n          </SimpleGrid>\n        </VStack>\n      </Flex>\n    </>\n  )\n}\n\ninterface FeatureProps {\n  text: string\n  iconBg: string\n  icon?: ReactElement\n}\n\nconst Feature = ({ text, icon, iconBg }: FeatureProps) => {\n  return (\n    <Stack direction={'row'} align={'center'}>\n      <Flex\n        w={8}\n        h={8}\n        align={'center'}\n        justify={'center'}\n        rounded={'full'}\n        bg={iconBg}\n      >\n        {icon}\n      </Flex>\n      <Text fontWeight={600}>{text}</Text>\n    </Stack>\n  )\n}\n\nfunction IndexPage() {\n  return (\n    <VStack spacing={10} maxWidth=\"100%\" align=\"stretch\">\n      <Splash />\n      <Stack as={Box} textAlign={'center'} spacing={2}>\n        <Text fontSize={'2xl'}>\n          We build on our core competency of Technical Due Diligence.\n        </Text>\n        <Text fontSize={'2xl'}>We work quickly and efficiently.</Text>\n        <Text fontSize={'2xl'}>\n          We have strong opinions, but are not dogmatic or arbitrary.\n        </Text>\n      </Stack>\n      <Heading>Services</Heading>\n      <ServicesGrid />\n      <Heading>What people say</Heading>\n      <TestimonialsGrid />\n      <VStack align=\"stretch\">\n        <Heading>Revealing Questions and Awkward Answers</Heading>\n        <Text>From the archives...</Text>\n      </VStack>\n      <QuestionGrid />\n      {/* <Heading>Common Solutions</Heading>\n      <SolutionGrid /> */}\n    </VStack>\n  )\n}\n\nexport default IndexPage\n"],"names":["InfoCard","lightBackground","darkBackground","children","background","useColorModeValue","w","p","boxShadow","borderRadius","borderWidth","Matrix","columns","sm","md","spacing","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","_useState","useState","status","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","_excluded","_excluded2","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","width","height","Image$1","fallbackSrc","fallback","align","fit","shouldIgnore","undefined","shared","objectFit","objectPosition","as","className","displayName","_excluded$1","AvatarBadge","badgeStyles","position","display","alignItems","justifyContent","insetEnd","bottom","badge","cx","__css","initials","name","_name$split","split","firstName","lastName","charAt","AvatarName","getInitials","styles","role","label","DefaultIcon","viewBox","color","fill","d","baseStyle","textAlign","textTransform","fontWeight","flexShrink","Avatar","_omitThemingProps","showBorder","_omitThemingProps$bor","_omitThemingProps$get","_omitThemingProps$ico","icon","_omitThemingProps$ico2","iconLabel","borderColor","avatarStyles","container","value","AvatarImage","_props$icon","AvatarGroup","max","_omitThemingProps$spa","validChildren","childrenWithinMax","slice","excess","clones","reverse","map","child","index","_child$props$borderCo","childProps","marginEnd","size","excessStyles","marginStart","excessLabel","flexDirection","createMediaQueries","breakpoints","entries","sort","a","b","Number","parseInt","_ref","arr","breakpoint","minWidth","next","maxWidth","query","toMediaString","modifier","replace","measurementRegex","match","parseFloat","calculateMeasurement","endsWith","subtract","createMediaQueryString","_excluded3","useBreakpointValue","values","defaultBreakpoint","env","mediaQueries","base","_React$useState","maxBreakpoint","window","matchMedia","forEach","matches","mediaQuery","find","_ref2","currentBreakpoint","setCurrentBreakpoint","update","listeners","Set","_ref3","handleChange","addListener","add","removeListener","_ref4","clear","useBreakpoint","theme","breakpoints$1","stopIndex","getClosestValue","services","heading","blurb","questions","question","answers","splashCards","splash","testimonials","title","quote","company","avatar","ServiceCard","t","QuestionCard","questionCardProps","templateColumns","colSpan","answer","ServicesGrid","cardInfo","QuestionGrid","TestimonialAvatar","fontSize","TestimonialCard","testimonialCardProps","TestimonialsGrid","SplashCard","Splash","h","backgroundImage","backgroundSize","px","py","bgGradient","Box"],"sourceRoot":""}